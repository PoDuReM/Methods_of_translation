✋: add_sub;

add_sub 🤯 [int]:
    🤔 pow add_sub_cont{0}           { $val = $pow.val + $add_sub_cont.val; }
;

add_sub_cont 🤓[int a] 🤯 [int]:
    🤔 ADD pow add_sub_cont{a}       { $val = $pow.val + $add_sub_cont.val; std::cout << "ADD🎈" << res.val << std::endl; }
    🤔 SUB pow add_sub_cont{a}       { $val = -$pow.val + $add_sub_cont.val; std::cout << "SUB🎈" << res.val << std::endl; }
    🤔                               { $val = 0; std::cout << res.val << std::endl; }
;

pow 🤯[int]:
    🤔 atom pow_cont{$atom.val}      { $val = $pow_cont.val; }
;

pow_cont 🤓[int a] 🤯 [int]:
    🤔 POW atom pow_cont{$atom.val}        { $val = std::pow(a, $pow_cont.val); std::cout << "POW🎈" << res.val << std::endl; }
    🤔                                     { $val = a; std::cout << "POW0🎈" << res.val << std::endl; }
;

atom 🤯 [int]:
    🤔 OPEN add_sub CLOSE            { $val = $add_sub.val; }
    🤔 NUM                           { $val = std::stoi($NUM.val); }
;

ADD: "\\+";
SUB: "\\-";
MUL: "\\*";
POW: "\\^";
OPEN: "\\(";
CLOSE: "\\)";
NUM: "\\d+";

👉: ' ' '\t' '\n' '\r';
