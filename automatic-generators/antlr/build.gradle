group 'com.JetBrains.ReferenceTo'
version '1.0'


apply plugin: 'groovy'
apply plugin: 'maven'

buildscript {
    ext.kotlin_version = '1.1.4-3'

    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile "org.jetbrains.kotlin:kotlin-reflect:1.1.51"
}

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'kotlin'
apply plugin: 'antlr'
apply plugin: 'application'

sourceCompatibility = 1.8

repositories {
    jcenter()
    mavenCentral()
}


dependencies {
    compile(
            ["org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"],
            ["org.jetbrains.kotlinx:kotlinx-coroutines-core:0.19"],
            [group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.9.0'],
            [group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.9.0']
    )
    antlr "org.antlr:antlr4:4.5.3"
    testCompile group: 'junit', name: 'junit', version: '4.12'
}

generateGrammarSource {
    maxHeapSize = "4g"
    arguments += ["-visitor", "-long-messages", "-package", "antlr.generated"]
    outputDirectory = new File("src/generated/java/antlr/generated".toString())
}


compileKotlin {
    dependsOn generateGrammarSource
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    dependsOn generateGrammarSource
    kotlinOptions.jvmTarget = "1.8"
}

task execute(type:JavaExec) {
    main = 'indexing.MainKt'
    classpath = sourceSets.main.runtimeClasspath
    if (project.hasProperty("appArgs")) {
        args Eval.me(appArgs)
    }
}

kotlin {
    experimental {
        coroutines "enable"
    }
}

test {
//    exclude 'analysis/*'
    exclude 'decompilation/*'
}

sourceSets {
    main {
        antlr {
            srcDirs = ['src/main/antlr']
        }
        java {
            srcDirs = ['src/main/java', 'src/generated/java']
        }
        kotlin {
            srcDirs = ['src/main/kotlin']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}
mainClassName = "indexing.MainKt"